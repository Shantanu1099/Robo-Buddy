{"version":3,"sources":["Card.js","CardList.js","robots.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","CardArray","map","user","i","username","SearchBox","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"iKAceA,G,KAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAW,wDAAhB,UACI,qBAAKA,UAAU,KAAKC,IAAG,+BAA4BF,EAA5B,YAA0CG,IAAM,UACvE,sBAAKF,UAAU,gBAAf,UACI,6BAAKH,IACL,4BAAIC,YCkDLK,EAtDE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OACI,cAAC,EAAD,CAEAT,GAAMK,EAAOI,GAAGT,GAChBF,KAAQO,EAAOI,GAAGX,KAClBC,MAASM,EAAOI,GAAGV,OAHZU,MAOf,OACI,sBAAKR,UAAY,GAAjB,UAYDK,EAZC,QChBKD,EAAS,CACpB,CACEL,GAAI,EACJF,KAAM,gBACNY,SAAU,OACVX,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,eACNY,SAAU,YACVX,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,mBACNY,SAAU,WACVX,MAAO,sBAET,CACEC,GAAI,EACJF,KAAM,mBACNY,SAAU,WACVX,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,mBACNY,SAAU,SACVX,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,uBACNY,SAAU,mBACVX,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,kBACNY,SAAU,eACVX,MAAO,0BAET,CACEC,GAAI,EACJF,KAAM,2BACNY,SAAU,gBACVX,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,kBACNY,SAAU,WACVX,MAAO,2BAET,CACEC,GAAI,GACJF,KAAM,qBACNY,SAAU,iBACVX,MAAO,0BAET,CACEC,GAAI,GACJF,KAAM,oBACNY,SAAU,OACVX,MAAO,qBCpDIY,EAXG,WACd,OACI,qBAAKV,UAAY,KAAjB,SACI,uBACAW,KAAO,SACPC,YAAc,qBCOXC,EATH,WACR,OACI,gCACI,oBAAIb,UAAY,WAAhB,wBACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUI,OAAUA,QCEjBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1Bb,EAAiBc,QAAQC,M","file":"static/js/main.5016595f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return(\n        <div className= \"tc bg-black dib br3 pa2 ma2 bw2 shadow-5 grow measure\">\n            <img className=\"h4\" src = {`https://robohash.org/${id}?200x200`} alt = \"Robot\" />\n            <div className=\"f7 light-blue\">\n                <h1>{name}</h1>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './Card';\n// import robots from './robots';\n\nconst CardList = ({ robots }) => {\n    const CardArray = robots.map((user, i) => {\n        return (\n            <Card \n            key = {i} \n            id = {robots[i].id} \n            name = {robots[i].name} \n            email = {robots[i].email}\n            />\n        );\n    });\n    return (\n        <div className = \"\">\n      {/* <Card id = {robots[0].id} name = {robots[0].name} email = {robots[0].email}/>\n      <Card id = {robots[1].id} name = {robots[1].name} email = {robots[1].email}/>\n      <Card id = {robots[2].id} name = {robots[2].name} email = {robots[2].email}/>\n      <Card id = {robots[3].id} name = {robots[3].name} email = {robots[3].email}/>\n      <Card id = {robots[4].id} name = {robots[4].name} email = {robots[4].email}/>\n      <Card id = {robots[5].id} name = {robots[5].name} email = {robots[5].email}/>\n      <Card id = {robots[6].id} name = {robots[6].name} email = {robots[6].email}/>\n      <Card id = {robots[7].id} name = {robots[7].name} email = {robots[7].email}/>\n      <Card id = {robots[8].id} name = {robots[8].name} email = {robots[8].email}/>\n      <Card id = {robots[9].id} name = {robots[9].name} email = {robots[9].email}/>\n      <Card id = {robots[10].id} name = {robots[10].name} email = {robots[10].email}/> */}\n      {CardArray};\n      </div>\n\n    );\n}\n\n\n\n// Above functiomn can be directly returned aswell\n\n\n// const CardList = ({ robots }) => {\n//     return (\n//         <div>\n//             {\n//                 robots.map((user, i) => {\n//                 return (\n//                             <Card \n//                             key = {i} \n//                             id = {robots[i].id} \n//                             name = {robots[i].name} \n//                             email = {robots[i].email}\n//                             />\n//                         );\n//                     })\n//             }\n//         </div>\n//     );\n// }\n\nexport default CardList;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 11,\n    name: 'Dr. Doofinshmirtz',\n    username: 'Doof',\n    email: 'Doof.evilInc@lab'\n  }\n];\n","import React from 'react';\n\nconst SearchBox = () => {\n    return (\n        <div className = \"tc\">\n            <input  \n            type = \"search\" \n            placeholder = \"Search Robots\"\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox';\n\nconst App = () => {\n    return (\n        <div>\n            <h1 className = \"white tc\">Robo-Buddy</h1>\n            <SearchBox />\n            <CardList robots = {robots}/>\n        </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import CardList from './CardList';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n      {/* <CardList robots = {robots}/> */}\n      {/* <Card /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals((console.log));\n"],"sourceRoot":""}